=== Generated schedule for mkAuroraIntra ===

Method schedule
---------------
Method: send
Ready signal: auroraGearbox.RDY_send
Conflict-free: receive,
	       getDebugCnts_snd_fst,
	       getDebugCnts_snd_snd_fst,
	       getDebugCnts_snd_snd_snd,
	       channel_up,
	       lane_up,
	       hard_err,
	       soft_err,
	       data_err_count,
	       aurora_rxn_in,
	       aurora_rxp_in,
	       aurora_txn_out,
	       aurora_txp_out,
	       curSendBudget
Sequenced after: getDebugCnts_fst
Conflicts: send
 
Method: receive
Ready signal: auroraGearbox.RDY_recv
Conflict-free: send,
	       getDebugCnts_fst,
	       getDebugCnts_snd_snd_fst,
	       getDebugCnts_snd_snd_snd,
	       channel_up,
	       lane_up,
	       hard_err,
	       soft_err,
	       data_err_count,
	       aurora_rxn_in,
	       aurora_rxp_in,
	       aurora_txn_out,
	       aurora_txp_out,
	       curSendBudget
Sequenced after: getDebugCnts_snd_fst
Conflicts: receive
 
Method: getDebugCnts_fst
Ready signal: True
Conflict-free: receive,
	       getDebugCnts_fst,
	       getDebugCnts_snd_fst,
	       getDebugCnts_snd_snd_fst,
	       getDebugCnts_snd_snd_snd,
	       channel_up,
	       lane_up,
	       hard_err,
	       soft_err,
	       data_err_count,
	       aurora_rxn_in,
	       aurora_rxp_in,
	       aurora_txn_out,
	       aurora_txp_out,
	       curSendBudget
Sequenced before: send
 
Method: getDebugCnts_snd_fst
Ready signal: True
Conflict-free: send,
	       getDebugCnts_fst,
	       getDebugCnts_snd_fst,
	       getDebugCnts_snd_snd_fst,
	       getDebugCnts_snd_snd_snd,
	       channel_up,
	       lane_up,
	       hard_err,
	       soft_err,
	       data_err_count,
	       aurora_rxn_in,
	       aurora_rxp_in,
	       aurora_txn_out,
	       aurora_txp_out,
	       curSendBudget
Sequenced before: receive
 
Method: getDebugCnts_snd_snd_fst
Ready signal: True
Conflict-free: send,
	       receive,
	       getDebugCnts_fst,
	       getDebugCnts_snd_fst,
	       getDebugCnts_snd_snd_fst,
	       getDebugCnts_snd_snd_snd,
	       channel_up,
	       lane_up,
	       hard_err,
	       soft_err,
	       data_err_count,
	       aurora_rxn_in,
	       aurora_rxp_in,
	       aurora_txn_out,
	       aurora_txp_out,
	       curSendBudget
 
Method: getDebugCnts_snd_snd_snd
Ready signal: True
Conflict-free: send,
	       receive,
	       getDebugCnts_fst,
	       getDebugCnts_snd_fst,
	       getDebugCnts_snd_snd_fst,
	       getDebugCnts_snd_snd_snd,
	       channel_up,
	       lane_up,
	       hard_err,
	       soft_err,
	       data_err_count,
	       aurora_rxn_in,
	       aurora_rxp_in,
	       aurora_txn_out,
	       aurora_txp_out,
	       curSendBudget
 
Method: channel_up
Ready signal: True
Conflict-free: send,
	       receive,
	       getDebugCnts_fst,
	       getDebugCnts_snd_fst,
	       getDebugCnts_snd_snd_fst,
	       getDebugCnts_snd_snd_snd,
	       channel_up,
	       lane_up,
	       hard_err,
	       soft_err,
	       data_err_count,
	       aurora_rxn_in,
	       aurora_rxp_in,
	       aurora_txn_out,
	       aurora_txp_out,
	       curSendBudget
 
Method: lane_up
Ready signal: True
Conflict-free: send,
	       receive,
	       getDebugCnts_fst,
	       getDebugCnts_snd_fst,
	       getDebugCnts_snd_snd_fst,
	       getDebugCnts_snd_snd_snd,
	       channel_up,
	       lane_up,
	       hard_err,
	       soft_err,
	       data_err_count,
	       aurora_rxn_in,
	       aurora_rxp_in,
	       aurora_txn_out,
	       aurora_txp_out,
	       curSendBudget
 
Method: hard_err
Ready signal: True
Conflict-free: send,
	       receive,
	       getDebugCnts_fst,
	       getDebugCnts_snd_fst,
	       getDebugCnts_snd_snd_fst,
	       getDebugCnts_snd_snd_snd,
	       channel_up,
	       lane_up,
	       hard_err,
	       soft_err,
	       data_err_count,
	       aurora_rxn_in,
	       aurora_rxp_in,
	       aurora_txn_out,
	       aurora_txp_out,
	       curSendBudget
 
Method: soft_err
Ready signal: True
Conflict-free: send,
	       receive,
	       getDebugCnts_fst,
	       getDebugCnts_snd_fst,
	       getDebugCnts_snd_snd_fst,
	       getDebugCnts_snd_snd_snd,
	       channel_up,
	       lane_up,
	       hard_err,
	       soft_err,
	       data_err_count,
	       aurora_rxn_in,
	       aurora_rxp_in,
	       aurora_txn_out,
	       aurora_txp_out,
	       curSendBudget
 
Method: data_err_count
Ready signal: True
Conflict-free: send,
	       receive,
	       getDebugCnts_fst,
	       getDebugCnts_snd_fst,
	       getDebugCnts_snd_snd_fst,
	       getDebugCnts_snd_snd_snd,
	       channel_up,
	       lane_up,
	       hard_err,
	       soft_err,
	       data_err_count,
	       aurora_rxn_in,
	       aurora_rxp_in,
	       aurora_txn_out,
	       aurora_txp_out,
	       curSendBudget
 
Method: aurora_rxn_in
Ready signal: True
Conflict-free: send,
	       receive,
	       getDebugCnts_fst,
	       getDebugCnts_snd_fst,
	       getDebugCnts_snd_snd_fst,
	       getDebugCnts_snd_snd_snd,
	       channel_up,
	       lane_up,
	       hard_err,
	       soft_err,
	       data_err_count,
	       aurora_rxn_in,
	       aurora_rxp_in,
	       aurora_txn_out,
	       aurora_txp_out,
	       curSendBudget
 
Method: aurora_rxp_in
Ready signal: True
Conflict-free: send,
	       receive,
	       getDebugCnts_fst,
	       getDebugCnts_snd_fst,
	       getDebugCnts_snd_snd_fst,
	       getDebugCnts_snd_snd_snd,
	       channel_up,
	       lane_up,
	       hard_err,
	       soft_err,
	       data_err_count,
	       aurora_rxn_in,
	       aurora_rxp_in,
	       aurora_txn_out,
	       aurora_txp_out,
	       curSendBudget
 
Method: aurora_txn_out
Ready signal: True
Conflict-free: send,
	       receive,
	       getDebugCnts_fst,
	       getDebugCnts_snd_fst,
	       getDebugCnts_snd_snd_fst,
	       getDebugCnts_snd_snd_snd,
	       channel_up,
	       lane_up,
	       hard_err,
	       soft_err,
	       data_err_count,
	       aurora_rxn_in,
	       aurora_rxp_in,
	       aurora_txn_out,
	       aurora_txp_out,
	       curSendBudget
 
Method: aurora_txp_out
Ready signal: True
Conflict-free: send,
	       receive,
	       getDebugCnts_fst,
	       getDebugCnts_snd_fst,
	       getDebugCnts_snd_snd_fst,
	       getDebugCnts_snd_snd_snd,
	       channel_up,
	       lane_up,
	       hard_err,
	       soft_err,
	       data_err_count,
	       aurora_rxn_in,
	       aurora_rxp_in,
	       aurora_txn_out,
	       aurora_txp_out,
	       curSendBudget
 
Method: curSendBudget
Ready signal: True
Conflict-free: send,
	       receive,
	       getDebugCnts_fst,
	       getDebugCnts_snd_fst,
	       getDebugCnts_snd_snd_fst,
	       getDebugCnts_snd_snd_snd,
	       channel_up,
	       lane_up,
	       hard_err,
	       soft_err,
	       data_err_count,
	       aurora_rxn_in,
	       aurora_rxp_in,
	       aurora_txn_out,
	       aurora_txp_out,
	       curSendBudget
 
Rule schedule
-------------
Rule: auroraIntraImport_updateLaneUp
Predicate: True
Blocking rules: (none)
 
Rule: auroraIntraImport_detectFull
Predicate: ! auroraIntraImport_mirrorQ.notFull
Blocking rules: (none)
 
Rule: syncCnt
Predicate: auroraSendCntCC.RDY_write && auroraRecCntCC.RDY_write
Blocking rules: (none)
 
Rule: auroraInit
Predicate: auroraInitCnt < 32'd512
Blocking rules: (none)
 
Rule: auroraOut
Predicate: auroraGearbox.RDY_auroraSend &&
	   auroraIntraImport_mirrorQ.i_notFull &&
	   auroraIntraImport_laneUpR && (! (auroraInitCnt < 32'd512))
Blocking rules: (none)
 
Rule: auroraR
Predicate: auroraIntraImport_mirrorQ.i_notEmpty &&
	   (((auroraInitCnt < 32'd512) &&
	     (! auroraIntraImport_mirrorQ.first[126])) ||
	    auroraRecvQ.i_notFull)
Blocking rules: (none)
 
Rule: auroraIn
Predicate: auroraGearbox.RDY_auroraRecv && auroraRecvQ.i_notEmpty &&
	   (! (auroraInitCnt < 32'd512))
Blocking rules: (none)
 
Rule: aSendB_clock_domain_crossing
Predicate: True
Blocking rules: (none)
 
Logical execution order: getDebugCnts_fst,
			 send,
			 getDebugCnts_snd_fst,
			 receive,
			 getDebugCnts_snd_snd_fst,
			 getDebugCnts_snd_snd_snd,
			 channel_up,
			 lane_up,
			 hard_err,
			 soft_err,
			 data_err_count,
			 aurora_rxn_in,
			 aurora_rxp_in,
			 aurora_txn_out,
			 aurora_txp_out,
			 curSendBudget,
			 syncCnt,
			 auroraOut,
			 auroraIn,
			 auroraIntraImport_updateLaneUp,
			 auroraIntraImport_detectFull,
			 auroraR,
			 auroraInit,
			 aSendB_clock_domain_crossing

=============================================
